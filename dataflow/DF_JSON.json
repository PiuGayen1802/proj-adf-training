{
	"name": "DF_JSON",
	"properties": {
		"folder": {
			"name": "Assessment"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json6",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable20",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          fullName as string,",
				"          country as string,",
				"          email as string,",
				"          phone as string,",
				"          accountCreated as string,",
				"          accounts as (accountId as integer, accountBalance as integer, created as string)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> source1",
				"source1 foldDown(unroll(accounts),",
				"     mapColumn(",
				"          id,",
				"          fullName,",
				"          country,",
				"          email,",
				"          phone,",
				"          accountCreated,",
				"          accountId = accounts.accountId,",
				"          accountBalance = accounts.accountBalance,",
				"          created = accounts.created",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(accountId = toLong(accountId)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id as integer,",
				"          fullName as string,",
				"          country as string,",
				"          email as string,",
				"          phone as string,",
				"          accountCreated as string,",
				"          account_id as long,",
				"          accountBalance as integer,",
				"          created as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}